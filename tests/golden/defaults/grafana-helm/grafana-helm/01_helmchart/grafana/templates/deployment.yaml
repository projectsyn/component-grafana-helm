apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: grafana-helm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 7.3.5
    helm.sh/chart: grafana-6.1.16
  name: grafana-helm
  namespace: syn-grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana-helm
      app.kubernetes.io/name: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 177667fb73f26a0f14e64ded46de234fd3885ea91837ac5499409a76685eefad
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: af35bfa3e38aa45d58e97b707510e36c2193849bdb0ff3c46e3f8682e9b2c1e5
      labels:
        app.kubernetes.io/instance: grafana-helm
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: admin-user
                  name: grafana-helm
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: grafana-helm
          image: grafana/grafana:7.3.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          name: grafana
          ports:
            - containerPort: 80
              name: service
              protocol: TCP
            - containerPort: 3000
              name: grafana
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources: {}
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: config
              subPath: grafana.ini
            - mountPath: /var/lib/grafana
              name: storage
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana-helm
      volumes:
        - configMap:
            name: grafana-helm
          name: config
        - emptyDir: {}
          name: storage
